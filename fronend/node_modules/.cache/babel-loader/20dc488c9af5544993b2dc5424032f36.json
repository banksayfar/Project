{"remainingRequest":"C:\\xampp\\htdocs\\bank\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\bank\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\bank\\src\\stores\\UserStore.js","dependencies":[{"path":"C:\\xampp\\htdocs\\bank\\src\\stores\\UserStore.js","mtime":1540729175709},{"path":"C:\\xampp\\htdocs\\bank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538354360000},{"path":"C:\\xampp\\htdocs\\bank\\node_modules\\babel-loader\\lib\\index.js","mtime":1538354308000},{"path":"C:\\xampp\\htdocs\\bank\\node_modules\\eslint-loader\\index.js","mtime":1538351310000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\bank\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from '@/axios';\nVue.use(Vuex);\nvar userstore = new Vuex.Store({\n  state: {\n    // posts : [],\n    showcat: [],\n    access_token: [],\n    lineloginline: []\n  },\n  mutations: {\n    // setPosts(state,posts) {\n    //     state.posts = posts\n    // },\n    setShowcat: function setShowcat(state, showcat) {\n      state.showcat = showcat;\n    },\n    getLoginLine: function getLoginLine(state, lineloginline) {\n      state.lineloginline = lineloginline;\n    },\n    getTokenLine: function getTokenLine(state, data) {\n      state.access_token = data;\n    },\n    getUser: function getUser(state, data) {\n      state.user = data;\n    }\n  },\n  actions: {\n    loadShowcat: function () {\n      var _loadShowcat = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost/bank/api/showcat.php\").then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context.sent;\n                context.commit(\"setShowcat\", data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadShowcat(_x) {\n        return _loadShowcat.apply(this, arguments);\n      };\n    }(),\n    getLoginLine: function () {\n      var _getLoginLine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost/bank/api/line/getlinklogin\").then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context2.sent;\n                context.commit(\"getLoginLine\", data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getLoginLine(_x2) {\n        return _getLoginLine.apply(this, arguments);\n      };\n    }(),\n    getTokenLine: function () {\n      var _getTokenLine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost/bank/api/line/callback?code=\" + options.code + \"&state=\" + options.state).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context3.sent;\n                context.commit(\"getTokenLine\", data);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTokenLine(_x3, _x4) {\n        return _getTokenLine.apply(this, arguments);\n      };\n    }(),\n    getUser: function () {\n      var _getUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post(\"http://localhost/bank/api/line/getUser\", options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context4.sent;\n                context.commit(\"getUser\", data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getUser(_x5, _x6) {\n        return _getUser.apply(this, arguments);\n      };\n    }()\n  }\n});\nexport default userstore;",{"version":3,"sources":["C:\\xampp\\htdocs\\bank\\src\\stores\\UserStore.js"],"names":["Vue","Vuex","axios","use","userstore","Store","state","showcat","access_token","lineloginline","mutations","setShowcat","getLoginLine","getTokenLine","data","getUser","user","actions","loadShowcat","context","get","then","r","commit","options","code","post","headers"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACAF,IAAIG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,YAAa,IAAIH,KAAKI,KAAT,CAAe;AAC9BC,SAAO;AACH;AACAC,aAAU,EAFP;AAGHC,kBAAe,EAHZ;AAIHC,mBAAe;AAJZ,GADuB;AAO9BC,aAAW;AACP;AACA;AACA;AACAC,cAJO,sBAIIL,KAJJ,EAIUC,OAJV,EAImB;AACtBD,YAAMC,OAAN,GAAgBA,OAAhB;AACH,KANM;AAOPK,gBAPO,wBAOMN,KAPN,EAOaG,aAPb,EAO4B;AAC/BH,YAAMG,aAAN,GAAsBA,aAAtB;AACH,KATM;AAUPI,gBAVO,wBAUMP,KAVN,EAUaQ,IAVb,EAUmB;AACtBR,YAAME,YAAN,GAAqBM,IAArB;AACH,KAZM;AAaPC,WAbO,mBAaCT,KAbD,EAaQQ,IAbR,EAac;AACjBR,YAAMU,IAAN,GAAaF,IAAb;AACH;AAfM,GAPmB;AAwB9BG,WAAS;AACCC,eADD;AAAA;AAAA;AAAA,+CACaC,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEgBjB,MAAMkB,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAwD,UAACC,CAAD,EAAO;AAC5E,yBAAOA,EAAER,IAAT;AACH,iBAFgB,CAFhB;;AAAA;AAEGA,oBAFH;AAKDK,wBAAQI,MAAR,CAAe,YAAf,EAA4BT,IAA5B;;AALC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOCF,gBAPD;AAAA;AAAA;AAAA,gDAOcO,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQgBjB,MAAMkB,GAAN,CAAU,6CAAV,EAAyDC,IAAzD,CAA8D,UAACC,CAAD,EAAO;AAClF,yBAAOA,EAAER,IAAT;AACH,iBAFgB,CARhB;;AAAA;AAQGA,oBARH;AAWDK,wBAAQI,MAAR,CAAe,cAAf,EAA+BT,IAA/B;;AAXC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaCD,gBAbD;AAAA;AAAA;AAAA,gDAacM,OAbd,EAauBK,OAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAcgBtB,MAAMkB,GAAN,CAAU,kDAAkDI,QAAQC,IAA1D,GAAiE,SAAjE,GAA6ED,QAAQlB,KAA/F,EAAsGe,IAAtG,CAA2G,UAACC,CAAD,EAAO;AAC/H,yBAAOA,EAAER,IAAT;AACH,iBAFgB,CAdhB;;AAAA;AAcGA,oBAdH;AAiBDK,wBAAQI,MAAR,CAAe,cAAf,EAA+BT,IAA/B;;AAjBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmBCC,WAnBD;AAAA;AAAA;AAAA,gDAmBSI,OAnBT,EAmBkBK,OAnBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoBgBtB,MAAMwB,IAAN,CAAW,wCAAX,EAAoDF,OAApD,EAA4D;AAACG,2BAAU;AAAC,oCAAiB;AAAlB;AAAX,iBAA5D,EAA+IN,IAA/I,CAAoJ,UAACC,CAAD,EAAO;AACxK,yBAAOA,EAAER,IAAT;AACH,iBAFgB,CApBhB;;AAAA;AAoBGA,oBApBH;AAuBDK,wBAAQI,MAAR,CAAe,SAAf,EAA0BT,IAA1B;;AAvBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBqB,CAAf,CAAnB;AAqDA,eAAeV,SAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from '@/axios'\r\nVue.use(Vuex)\r\n\r\nconst userstore  = new Vuex.Store({\r\n    state: {\r\n        // posts : [],\r\n        showcat : [],\r\n        access_token : [],\r\n        lineloginline: [],\r\n    },\r\n    mutations: {\r\n        // setPosts(state,posts) {\r\n        //     state.posts = posts\r\n        // },\r\n        setShowcat(state,showcat) {\r\n            state.showcat = showcat\r\n        },\r\n        getLoginLine(state, lineloginline) {\r\n            state.lineloginline = lineloginline\r\n        },\r\n        getTokenLine(state, data) {\r\n            state.access_token = data\r\n        },\r\n        getUser(state, data) {\r\n            state.user = data\r\n        },\r\n    },\r\n    actions: {\r\n        async loadShowcat(context){\r\n            let data = await axios.get(\"http://localhost/bank/api/showcat.php\").then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"setShowcat\",data)\r\n        },\r\n        async getLoginLine(context) {\r\n            let data = await axios.get(\"http://localhost/bank/api/line/getlinklogin\").then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getLoginLine\", data)\r\n        },\r\n        async getTokenLine(context, options) {\r\n            let data = await axios.get(\"http://localhost/bank/api/line/callback?code=\" + options.code + \"&state=\" + options.state).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getTokenLine\", data)\r\n        },\r\n        async getUser(context, options) {\r\n            let data = await axios.post(\"http://localhost/bank/api/line/getUser\",options,{headers : {'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'}}).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getUser\", data)\r\n        },\r\n        \r\n    }\r\n})\r\n\r\nexport default userstore"]}]}