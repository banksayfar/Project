{"remainingRequest":"C:\\xampp\\htdocs\\Project\\fronend\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\Project\\fronend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\Project\\fronend\\src\\stores\\UserStore.js","dependencies":[{"path":"C:\\xampp\\htdocs\\Project\\fronend\\src\\stores\\UserStore.js","mtime":1543077347785},{"path":"C:\\xampp\\htdocs\\Project\\fronend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538354360000},{"path":"C:\\xampp\\htdocs\\Project\\fronend\\node_modules\\babel-loader\\lib\\index.js","mtime":1538354308000},{"path":"C:\\xampp\\htdocs\\Project\\fronend\\node_modules\\eslint-loader\\index.js","mtime":1538351310000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\Project\\\\fronend\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from '@/axios';\nVue.use(Vuex);\nvar userstore = new Vuex.Store({\n  state: {\n    // posts : [],\n    access_token: [],\n    lineloginline: [],\n    fromsearch: [],\n    addCat: [],\n    update: [],\n    showuser: [],\n    viewcat: []\n  },\n  mutations: {\n    // setPosts(state,posts) {\n    //     state.posts = posts\n    // },\n    getLoginLine: function getLoginLine(state, lineloginline) {\n      state.lineloginline = lineloginline;\n    },\n    getTokenLine: function getTokenLine(state, data) {\n      state.access_token = data;\n    },\n    getUser: function getUser(state, data) {\n      state.user = data;\n    },\n    getFromsearch: function getFromsearch(state, data) {\n      state.fromsearch = data;\n    },\n    addCat: function addCat(state, data) {\n      state.addCat = data;\n    },\n    UpdateProfile: function UpdateProfile(state, data) {\n      state.update = data;\n    },\n    showUser: function showUser(state, data) {\n      state.showuser = data;\n    },\n    viewcat: function viewcat(state, data) {\n      state.viewcat = data;\n    }\n  },\n  actions: {\n    loadShowcat: function () {\n      var _loadShowcat = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost/Project/api/showcat.php\").then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context.sent;\n                context.commit(\"setShowcat\", data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadShowcat(_x) {\n        return _loadShowcat.apply(this, arguments);\n      };\n    }(),\n    getLoginLine: function () {\n      var _getLoginLine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost/Project/api/line/getlinklogin\").then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context2.sent;\n                context.commit(\"getLoginLine\", data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getLoginLine(_x2) {\n        return _getLoginLine.apply(this, arguments);\n      };\n    }(),\n    getTokenLine: function () {\n      var _getTokenLine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost/Project/api/line/callback?code=\" + options.code + \"&state=\" + options.state).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context3.sent;\n                context.commit(\"getTokenLine\", data);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTokenLine(_x3, _x4) {\n        return _getTokenLine.apply(this, arguments);\n      };\n    }(),\n    getUser: function () {\n      var _getUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post(\"http://localhost/Project/api/line/getUser\", options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context4.sent;\n                context.commit(\"getUser\", data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getUser(_x5, _x6) {\n        return _getUser.apply(this, arguments);\n      };\n    }(),\n    getFromsearch: function () {\n      var _getFromsearch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.post(\"http://localhost/Project/api/from/showfrom\", options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context5.sent;\n                context.commit(\"getFromsearch\", data);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getFromsearch(_x7, _x8) {\n        return _getFromsearch.apply(this, arguments);\n      };\n    }(),\n    addCat: function () {\n      var _addCat = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.post(\"http://localhost/Project/api/cat/addCat\", options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context6.sent;\n                context.commit(\"addCat\", data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function addCat(_x9, _x10) {\n        return _addCat.apply(this, arguments);\n      };\n    }(),\n    UpdateProfile: function () {\n      var _UpdateProfile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return axios.post(\"http://localhost/Project/api/user/update\", options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context7.sent;\n                context.commit(\"UpdateProfile\", data);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function UpdateProfile(_x11, _x12) {\n        return _UpdateProfile.apply(this, arguments);\n      };\n    }(),\n    showUser: function () {\n      var _showUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(context) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return axios.get(\"http://localhost/Project/api/user/showuser\", {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context8.sent;\n                context.commit(\"showUser\", data);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function showUser(_x13) {\n        return _showUser.apply(this, arguments);\n      };\n    }(),\n    viewcat: function () {\n      var _viewcat = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(context, options) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return axios.post(\"http://localhost/Project/api/cat/viewcat/\" + options.id, options, {\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                  }\n                }).then(function (r) {\n                  return r.data;\n                });\n\n              case 2:\n                data = _context9.sent;\n                context.commit(\"viewcat\", data);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      return function viewcat(_x14, _x15) {\n        return _viewcat.apply(this, arguments);\n      };\n    }()\n  }\n});\nexport default userstore;",{"version":3,"sources":["C:\\xampp\\htdocs\\Project\\fronend\\src\\stores\\UserStore.js"],"names":["Vue","Vuex","axios","use","userstore","Store","state","access_token","lineloginline","fromsearch","addCat","update","showuser","viewcat","mutations","getLoginLine","getTokenLine","data","getUser","user","getFromsearch","UpdateProfile","showUser","actions","loadShowcat","context","get","then","r","commit","options","code","post","headers","id"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from '@/axios'\r\nVue.use(Vuex)\r\n\r\nconst userstore = new Vuex.Store({\r\n    state: {\r\n        // posts : [],\r\n\r\n        access_token: [],\r\n        lineloginline: [],\r\n        fromsearch: [],\r\n        addCat: [],\r\n        update: [],\r\n        showuser: [],\r\n        viewcat :[]\r\n\r\n    },\r\n    mutations: {\r\n        // setPosts(state,posts) {\r\n        //     state.posts = posts\r\n        // },\r\n\r\n        getLoginLine(state, lineloginline) {\r\n            state.lineloginline = lineloginline\r\n        },\r\n        getTokenLine(state, data) {\r\n            state.access_token = data\r\n        },\r\n        getUser(state, data) {\r\n            state.user = data\r\n        },\r\n        getFromsearch(state, data) {\r\n            state.fromsearch = data\r\n        },\r\n        addCat(state, data) {\r\n            state.addCat = data\r\n        },\r\n        UpdateProfile(state, data) {\r\n            state.update = data\r\n        },\r\n        showUser(state, data) {\r\n            state.showuser = data\r\n        },\r\n        viewcat(state, data) {\r\n            state.viewcat = data\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        async loadShowcat(context) {\r\n            let data = await axios.get(\"http://localhost/Project/api/showcat.php\").then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"setShowcat\", data)\r\n        },\r\n        async getLoginLine(context) {\r\n            let data = await axios.get(\"http://localhost/Project/api/line/getlinklogin\").then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getLoginLine\", data)\r\n        },\r\n        async getTokenLine(context, options) {\r\n            let data = await axios.get(\"http://localhost/Project/api/line/callback?code=\" + options.code + \"&state=\" + options.state).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getTokenLine\", data)\r\n        },\r\n        async getUser(context, options) {\r\n            let data = await axios.post(\"http://localhost/Project/api/line/getUser\", options, { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getUser\", data)\r\n        },\r\n        async getFromsearch(context, options) {\r\n            let data = await axios.post(\"http://localhost/Project/api/from/showfrom\", options, { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"getFromsearch\", data)\r\n        },\r\n        async addCat(context, options) {\r\n            let data = await axios.post(\"http://localhost/Project/api/cat/addCat\", options, { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"addCat\", data)\r\n        },\r\n        async UpdateProfile(context, options) {\r\n            let data = await axios.post(\"http://localhost/Project/api/user/update\", options, { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"UpdateProfile\", data)\r\n        },\r\n        async showUser(context) {\r\n            let data = await axios.get(\"http://localhost/Project/api/user/showuser\", { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"showUser\", data)\r\n        },\r\n        async viewcat(context,options) {\r\n            let data = await axios.post(\"http://localhost/Project/api/cat/viewcat/\"+options.id,options, { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' } }).then((r) => {\r\n                return r.data\r\n            })\r\n            context.commit(\"viewcat\", data)\r\n        },\r\n\r\n\r\n\r\n    }\r\n})\r\n\r\nexport default userstore"]}]}